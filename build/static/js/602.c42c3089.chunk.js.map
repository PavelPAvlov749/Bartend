{"version":3,"file":"static/js/602.c42c3089.chunk.js","mappings":"qJAIO,MAAMA,EAA8CC,IAMnDC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIF,EAAAA,EAAAA,KAAA,SAAOG,SALf,SAAwBC,GACpBL,EAAMM,eAAeD,EAAME,cAAcC,MAC7C,EAGwCC,KAAK,OAAOC,YAAY,oB,iCCP7D,MAAMC,EAAqBA,KAC9B,MAAMC,GAAWC,EAAAA,EAAAA,MAEjB,IAAKC,EAAQC,IAAaC,EAAAA,EAAAA,WAAkB,GAE5C,SAASC,IACLF,GAAWD,EACf,CAEA,OAAKA,GAcGI,EAAAA,EAAAA,MAAA,WAASC,UAAWC,EAAAA,EAAAA,YAAmBjB,SAAA,EACnCF,EAAAA,EAAAA,KAAA,QAAMoB,QAASA,IAAMT,EAAS,QAAQT,SAAC,gBACvCF,EAAAA,EAAAA,KAAA,QAAMoB,QAASA,IAAMT,EAAS,SAAST,SAAC,aACxCF,EAAAA,EAAAA,KAAA,QAAMoB,QAASJ,EAAOd,SAAC,cAd3Be,EAAAA,EAAAA,MAAA,WAASC,UAAWC,EAAAA,EAAAA,SAAiBC,QAASJ,EAAOd,SAAA,EACjDF,EAAAA,EAAAA,KAAA,OAAKkB,UAAWC,EAAAA,EAAAA,iBAChBnB,EAAAA,EAAAA,KAAA,OAAKkB,UAAWC,EAAAA,EAAAA,iBAChBnB,EAAAA,EAAAA,KAAA,OAAKkB,UAAWC,EAAAA,EAAAA,kBAe5B,E,wBCZJ,MAiCA,EAjCuCE,KAGnC,MAAOC,EAAUjB,IAAkBkB,EAAAA,EAAAA,IAAiB,IAE9CZ,GAAWC,EAAAA,EAAAA,MACjB,OAAGU,EAASE,OAAS,GAGbP,EAAAA,EAAAA,MAAA,WAASC,UAAWC,EAAAA,EAAAA,kBAAyBjB,SAAA,EACzCe,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,EAAAA,wBAA+BjB,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,MAAIkB,UAAWC,EAAAA,EAAAA,0BAAiCjB,SAAC,iBACjDF,EAAAA,EAAAA,KAACU,EAAQ,QAEbV,EAAAA,EAAAA,KAACF,EAAc,CAACO,eAAgBA,KAChCL,EAAAA,EAAAA,KAACyB,EAAAA,EAAY,CAACd,SAAUA,EAAUe,SAAUJ,QAQhDL,EAAAA,EAAAA,MAAA,WAASC,UAAWC,EAAAA,EAAAA,uBAA8BjB,SAAA,EAC5CF,EAAAA,EAAAA,KAACU,EAAQ,KACfV,EAAAA,EAAAA,KAAA,OAAKkB,UAAWC,EAAAA,EAAAA,gBAAwBQ,IAAKC,EAAcC,IAAI,MAC/D7B,EAAAA,EAAAA,KAAA,MAAAE,SAAI,oBAGZ,C","sources":["Modules/RecepiesApp/ProductSerach.tsx","Modules/RecepiesApp/DotsMenu.tsx","Modules/RecepiesApp/RecepiesAppContainer.tsx"],"sourcesContent":["\ntype SearchPropsType = {\n    filterProducts : (event : string) => void\n}\nexport const RecepiesSearch : React.FC<SearchPropsType> = (props) => {\n    // On search params change handler\n    function searchHandler (event : React.SyntheticEvent<HTMLInputElement>) {\n        props.filterProducts(event.currentTarget.value);\n    }\n    return (\n        <>\n            <input onChange={searchHandler} type=\"text\" placeholder=\"Find by name \" />\n        </>\n    )\n}","import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styles from \"./Styles/RecepiesContainer.module.css\";\n\nexport const DotsMenu: React.FC = () => {\n    const navigate = useNavigate();\n    // Toggle isWindowOpen \n    let [isOpen, setIsOpen] = useState<boolean>(false);\n    // Opening window togggler function \n    function toggle() {\n        setIsOpen(!isOpen);\n    }\n\n    if (!isOpen) {\n        // Render menu icon \n        return (\n            <section className={styles.dotsMenu} onClick={toggle}>\n                <div className={styles.dotsMenu__dot}></div>\n                <div className={styles.dotsMenu__dot}></div>\n                <div className={styles.dotsMenu__dot}></div>\n            </section>\n        )\n\n    }\n    else {\n        // Opened menu\n        return (\n            <section className={styles.menuOptions}>\n                <span onClick={() => navigate('/add')}>Create new</span>\n                <span onClick={() => navigate('/home')}>Go back</span>\n                <span onClick={toggle}>Close</span>\n\n            </section>\n        )\n    }\n}","// React,React hooks imports\nimport { useState } from \"react\"\nimport { useNavigate } from \"react-router-dom\";\n// Components\nimport { RecepiesSearch } from \"./ProductSerach\";\nimport { RecepiesList } from \"./RecepiesList\";\nimport { DotsMenu } from \"./DotsMenu\";\n// Style imports\nimport styles from \"./Styles/RecepiesContainer.module.css\";\n// Assests\nimport nothingFound from \"../../Assets/Icons/nothing.png\";\n// Redux,ReduxThunks,Actions\n// Cuastom hooks\nimport { useProductFilter } from \"../../Helpers/CustomHooks\";\n\n\n/**\n * Container component for premix recipe application. \n * Contains two sections: alcoholic and non-alcoholic premixes\n * \n * @returns React.Ellement\n */\nconst RecepiesAppContainer: React.FC = () => {\n\n    // Get products \n    const [products, filterProducts] = useProductFilter('');\n    // Grt navigate\n    const navigate = useNavigate();\n    if(products.length > 0)\n    {\n        return (\n            <section className={styles.recepiesContainer}>\n                <div className={styles.recepiesContainerHeader}>\n                    <h1 className={styles.recepiesContainer__tittle}>Premixes : </h1>\n                    <DotsMenu />\n                </div>\n                <RecepiesSearch filterProducts={filterProducts} />\n                <RecepiesList navigate={navigate} recepies={products} />\n    \n            </section>\n        )\n    }\n    else \n    {\n        return (\n            <section className={styles.recepiesContainerEmpty}>\n                  <DotsMenu />\n            <img className={styles.nothinFoundIcon} src={nothingFound} alt=\"\" />\n            <h1>Nothing Found</h1>\n            </section>\n        )\n    }\n  \n}\n\nexport default RecepiesAppContainer;"],"names":["RecepiesSearch","props","_jsx","_Fragment","children","onChange","event","filterProducts","currentTarget","value","type","placeholder","DotsMenu","navigate","useNavigate","isOpen","setIsOpen","useState","toggle","_jsxs","className","styles","onClick","RecepiesAppContainer","products","useProductFilter","length","RecepiesList","recepies","src","nothingFound","alt"],"sourceRoot":""}