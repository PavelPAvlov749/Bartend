{"version":3,"file":"static/js/161.815b9a00.chunk.js","mappings":"0KAQO,MAAMA,EAAoBC,IAC7B,IAAIC,EAA8B,GAsBlC,OArBA,SAA4BC,GACxB,GAAIA,EAAMC,QAAU,EAChB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAMC,OAAQC,IAE9BH,EAASI,MAAKC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,sBAAqBC,SAAEN,EAAME,MAInE,GAAIF,EAAMC,OAAS,EACf,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IAEnBH,EAASI,MAAKC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,sBAAqBC,SAAEN,EAAME,MAI/C,GAAhBF,EAAMC,QACNF,EAASI,MAAKC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,yBAAwBC,SAAC,uBAG/D,CACAC,CAAmBT,EAAME,QAErBI,EAAAA,EAAAA,KAAA,MAAmBC,UAAWG,EAAAA,EAAAA,uBAA8BF,UACxDG,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CAAgBC,GAAE,mBAAAC,OAAqBd,EAAMe,IAAKP,SAAA,EACtDF,EAAAA,EAAAA,KAAA,MAAAE,SAAKR,EAAMgB,OACVf,EAASgB,KAAKC,IAEPP,EAAAA,EAAAA,MAAAQ,EAAAA,SAAA,CAAAX,SAAA,CACKU,GACDZ,EAAAA,EAAAA,KAAA,gBANFN,EAAMe,KADff,EAAMe,GAaV,ECrCAK,EAAYpB,IACrB,MAAMqB,GAAWC,EAAAA,EAAAA,MAMjB,OACIX,EAAAA,EAAAA,MAAA,OAAKJ,UAAWG,EAAAA,EAAAA,kBAAyBF,SAAA,EACrCF,EAAAA,EAAAA,KAAA,MAAIC,UAAWG,EAAAA,EAAAA,cAAqBF,SACnCR,EAAMuB,WAAWN,KAAKC,IAEfZ,EAAAA,EAAAA,KAACP,EAAgB,CAACiB,KAAME,EAAGF,KAAMd,MAAOgB,EAAGhB,MAAOa,GAAIG,EAAGH,UAKjET,EAAAA,EAAAA,KAAA,UAAQC,UAAU,iBAClBiB,QAfe,WAEnBH,EAAS,kBACb,EAYgCb,SAAC,cACtB,E,wBClBf,MAyBA,EAzBmBiB,KAEf,IAAIC,GAAaC,EAAAA,EAAAA,KAEjB,OACIrB,EAAAA,EAAAA,KAAA,WAASC,UAAWG,EAAAA,EAAAA,sBAA6BF,UAC7CF,EAAAA,EAAAA,KAAA,OAAKC,UAAWG,EAAAA,EAAAA,oBAA2BF,SACtCkB,EAAWvB,OAAS,GACjBG,EAAAA,EAAAA,KAACc,EAAQ,CAACG,WAAYG,KAEtBf,EAAAA,EAAAA,MAAA,WAASJ,UAAWG,EAAAA,EAAAA,kDAAyDF,SAAA,EACzEF,EAAAA,EAAAA,KAAA,OAAKC,UAAWG,EAAAA,EAAAA,QAAgBkB,IAAKC,EAAUC,IAAI,MACnDxB,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iCAIJF,EAAAA,EAAAA,KAACM,EAAAA,GAAO,CAACC,GAAI,kBAAmBN,UAAWG,EAAAA,EAAAA,wBAA+BF,SAAC,iBAKjF,C","sources":["Modules/ChecklistApp/CheckListPreview.tsx","Modules/ChecklistApp/Components/ChekListItem.tsx","Modules/ChecklistApp/Components/CheckLists.tsx"],"sourcesContent":["import { ReactJSXElement } from \"@emotion/react/types/jsx-namespace\";\nimport { NavLink } from \"react-router-dom\";\n\n// STYLES\nimport styles from \"./Styles/CheckLists.module.css\";\n\n\n\nexport const CheckListPreview = (props: { name: string, tasks: string[], id: string }) => {\n    let jsxTasks: ReactJSXElement[] = [];\n    function renderTasksPreview(tasks: string[]) {\n        if (tasks.length <= 4) {\n            for (let i = 0; i < tasks.length; i++) {\n\n                jsxTasks.push(<span className=\"preview__item__task\">{tasks[i]}</span>);\n\n            }\n        }\n        if (tasks.length > 4) {\n            for (let i = 0; i < 4; i++) {\n\n                jsxTasks.push(<span className=\"preview__item__task\">{tasks[i]}</span>);\n\n            }\n        }\n        if (tasks.length == 0) {\n            jsxTasks.push(<span className=\"preview__item--no-task\">No tasks added ...</span>)\n        }\n\n    }\n    renderTasksPreview(props.tasks);\n    return (\n        <li key={props.id} className={styles.cheklist_preview__item}>\n            <NavLink key={props.id} to={`/check-lists/id=${props.id}`}>\n                <h3>{props.name}</h3>\n                {jsxTasks.map((el: ReactJSXElement) => {\n                    return (\n                        <>\n                            {el}\n                            <br />\n                        </>\n                    )\n                })}\n            </NavLink>\n\n        </li>\n    )\n}","// React,hooks\nimport { NavLink, useNavigate } from \"react-router-dom\"\n// Types\nimport { checkListType } from \"../../../Redux/CheckListReducer\"\nimport { CheckListPreview } from \"../CheckListPreview\";\n// Styles\nimport styles from \"../Styles/CheckLists.module.css\";\n\nexport const ItemList = (props: { checkLists: checkListType[] }) => {\n    const navigate = useNavigate();\n\n    const onClickHandler = function () {\n        // navigate by click\n        navigate(\"/new-check-list\");\n    }\n    return (\n        <div className={styles.single_check_list}>\n            <ul className={styles.checklis_list}>\n            {props.checkLists.map((el: checkListType) => {\n                return (\n                    <CheckListPreview name={el.name} tasks={el.tasks} id={el.id}/>\n                )\n            })}\n            </ul>\n            {/* If there is no existing cheklists propose to create */}\n            <button className=\"confirm_button\" \n            onClick={onClickHandler}>Add new</button>\n        </div >\n    )\n}","// React,Components,ReactHooks\nimport { NavLink } from \"react-router-dom\";\nimport { ItemList } from \"./ChekListItem\"\n// CustomHooks\nimport { useChecklistList } from \"./Hooks\";\n// Styles and Assets\nimport styles from \"../Styles/CheckLists.module.css\";\nimport notFound from \"../../../Assets/Icons/nothing.png\";\n\nconst CheckLists = () => {\n\n    let checklists = useChecklistList();\n\n    return (\n        <section className={styles.check_lists_container}>\n            <div className={styles.ckeck_lists_content}>\n                {checklists.length > 0 ?\n                    <ItemList checkLists={checklists} />\n                    :\n                    <section className={styles.check_lists_container__empty_check_list_container}>\n                        <img className={styles.bigIcon} src={notFound} alt=\"\" />\n                        <h3>\n\n                            There is no cheklists found\n                        </h3>\n                        <NavLink to={\"/new-check-list\"} className={styles.check_lists__create_btn}>Create</NavLink>\n                    </section>\n                }\n            </div>\n\n        </section>\n    )\n}\n\nexport default CheckLists"],"names":["CheckListPreview","props","jsxTasks","tasks","length","i","push","_jsx","className","children","renderTasksPreview","styles","_jsxs","NavLink","to","concat","id","name","map","el","_Fragment","ItemList","navigate","useNavigate","checkLists","onClick","CheckLists","checklists","useChecklistList","src","notFound","alt"],"sourceRoot":""}