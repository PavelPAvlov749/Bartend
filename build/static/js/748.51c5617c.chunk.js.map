{"version":3,"file":"static/js/748.51c5617c.chunk.js","mappings":"gKAIO,MAAMA,EAA8CC,IAMnDC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIF,EAAAA,EAAAA,KAAA,SAAOG,SALf,SAAwBC,GACpBL,EAAMM,eAAeD,EAAME,cAAcC,MAC7C,EAGwCC,KAAK,OAAOC,YAAY,oBCVpE,EAAoC,6CAApC,EAA6G,qDAA7G,EAA2L,kDAA3L,EAA+P,2CAA/P,EAA0W,wCAA1W,EAA6Z,oCAA7Z,EAA2d,mDAA3d,EAAyhB,oCAAzhB,EAA6kB,yCAA7kB,EAAooB,uCCSvnBC,EAAiDX,IAG1D,SAASY,EAAgBP,GACrBL,EAAMa,SAAS,YAAcR,EAAME,cAAcO,QAAQC,GAC7D,CACA,OACId,EAAAA,EAAAA,KAAA,MAAIe,UAAWC,EAAoBd,SAM9BH,EAAMkB,SAASC,KAAKC,IAEbnB,EAAAA,EAAAA,KAAA,MAAIe,UAAWC,EAA6B,UAASG,EAAGL,GAAIM,QAAST,EAAgBT,SAAEiB,EAAGE,MAArDF,EAAGL,OAG/C,ECxBAQ,EAAqBA,KAC9B,MAAMV,GAAWW,EAAAA,EAAAA,MAEjB,IAAKC,EAAQC,IAAaC,EAAAA,EAAAA,WAAkB,GAE5C,SAASC,IACLF,GAAWD,EACf,CAEA,OAAKA,GAcGI,EAAAA,EAAAA,MAAA,WAASb,UAAWC,EAAmBd,SAAA,EACnCF,EAAAA,EAAAA,KAAA,QAAMoB,QAASA,IAAMR,EAAS,QAAQV,SAAC,gBACvCF,EAAAA,EAAAA,KAAA,QAAMoB,QAASA,IAAMR,EAAS,SAASV,SAAC,aACxCF,EAAAA,EAAAA,KAAA,QAAMoB,QAASO,EAAOzB,SAAC,cAd3B0B,EAAAA,EAAAA,MAAA,WAASb,UAAWC,EAAiBI,QAASO,EAAOzB,SAAA,EACjDF,EAAAA,EAAAA,KAAA,OAAKe,UAAWC,KAChBhB,EAAAA,EAAAA,KAAA,OAAKe,UAAWC,KAChBhB,EAAAA,EAAAA,KAAA,OAAKe,UAAWC,MAe5B,E,wBCZJ,MAyCA,EAzCuCa,KAGnC,MAAOC,EAASC,IAAcL,EAAAA,EAAAA,UAAS,GAQvC,MAAOM,EAAU3B,IAAkB4B,EAAAA,EAAAA,IAAiB,IAE9CrB,GAAWW,EAAAA,EAAAA,MACjB,OAAGS,EAASE,OAAS,GAGbN,EAAAA,EAAAA,MAAA,WAASb,UAAWC,EAAyBd,SAAA,EACzC0B,EAAAA,EAAAA,MAAA,OAAKb,UAAWC,EAA+Bd,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,MAAIe,UAAWC,EAAiCd,SAAC,iBACjDF,EAAAA,EAAAA,KAACsB,EAAQ,QAEbtB,EAAAA,EAAAA,KAACF,EAAc,CAACO,eAAgBA,KAChCL,EAAAA,EAAAA,KAACU,EAAY,CAACE,SAAUA,EAAUK,SAAUe,QAQhDJ,EAAAA,EAAAA,MAAA,WAASb,UAAWC,EAA8Bd,SAAA,EAC5CF,EAAAA,EAAAA,KAACsB,EAAQ,KACftB,EAAAA,EAAAA,KAAA,OAAKe,UAAWC,EAAwBmB,IAAKC,EAAcC,IAAI,MAC/DrC,EAAAA,EAAAA,KAAA,MAAAE,SAAI,oBAGZ,C","sources":["Modules/RecepiesApp/ProductSerach.tsx","webpack://bartend/./src/Modules/RecepiesApp/Styles/RecepiesContainer.module.css?48ed","Modules/RecepiesApp/RecepiesList.tsx","Modules/RecepiesApp/DotsMenu.tsx","Modules/RecepiesApp/RecepiesAppContainer.tsx"],"sourcesContent":["\ntype SearchPropsType = {\n    filterProducts : (event : string) => void\n}\nexport const RecepiesSearch : React.FC<SearchPropsType> = (props) => {\n    // On search params change handler\n    function searchHandler (event : React.SyntheticEvent<HTMLInputElement>) {\n        props.filterProducts(event.currentTarget.value);\n    }\n    return (\n        <>\n            <input onChange={searchHandler} type=\"text\" placeholder=\"Find by name \" />\n        </>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"recepiesContainer\":\"RecepiesContainer_recepiesContainer__SlLBA\",\"recepiesContainer__tittle\":\"RecepiesContainer_recepiesContainer__tittle__sjMJ8\",\"recepiesContainerEmpty\":\"RecepiesContainer_recepiesContainerEmpty__7dp7p\",\"nothinFoundIcon\":\"RecepiesContainer_nothinFoundIcon__FuAth\",\"addButton\":\"RecepiesContainer_addButton__33RtY\",\"RecepiesList\":\"RecepiesContainer_RecepiesList__rwMOU\",\"listItem\":\"RecepiesContainer_listItem__wCtEU\",\"recepiesContainerHeader\":\"RecepiesContainer_recepiesContainerHeader__i0YcX\",\"dotsMenu\":\"RecepiesContainer_dotsMenu__KubNy\",\"dotsMenu__dot\":\"RecepiesContainer_dotsMenu__dot__k9Oqt\",\"menuOptions\":\"RecepiesContainer_menuOptions__+1Fi1\",\"appear\":\"RecepiesContainer_appear__ra75J\"};","import { productType } from \"../../Redux/Types\"\n// Styles\nimport styles from \"./Styles/RecepiesContainer.module.css\";\n\n// List Props type \ntype RecepiesListPropsType = {\n    recepies: productType[],\n    navigate: any // Remove this any later and define accurate type for this function\n}\n\nexport const RecepiesList: React.FC<RecepiesListPropsType> = (props) => {\n\n    // Navigation to product card function\n    function goToProductCard(event: React.SyntheticEvent<HTMLLIElement>) {\n        props.navigate(\"/card/id=\" + event.currentTarget.dataset.id);\n    }\n    return (\n        <ul className={styles.RecepiesList}>\n            {\n            /*  Map on the recepies array and reuturn <li> with containing \n                name of each element and navigation function passed into onClick \n            */}\n\n            {props.recepies.map((el: productType) => {\n                return (\n                    <li className={styles.listItem} key={el.id} data-id={el.id} onClick={goToProductCard}>{el.name}</li>\n                )\n            })}\n        </ul>\n\n\n\n\n    )\n}","import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport styles from \"./Styles/RecepiesContainer.module.css\";\n\nexport const DotsMenu: React.FC = () => {\n    const navigate = useNavigate();\n    // Toggle isWindowOpen \n    let [isOpen, setIsOpen] = useState<boolean>(false);\n    // Opening window togggler function \n    function toggle() {\n        setIsOpen(!isOpen);\n    }\n\n    if (!isOpen) {\n        // Render menu icon \n        return (\n            <section className={styles.dotsMenu} onClick={toggle}>\n                <div className={styles.dotsMenu__dot}></div>\n                <div className={styles.dotsMenu__dot}></div>\n                <div className={styles.dotsMenu__dot}></div>\n            </section>\n        )\n\n    }\n    else {\n        // Opened menu\n        return (\n            <section className={styles.menuOptions}>\n                <span onClick={() => navigate('/add')}>Create new</span>\n                <span onClick={() => navigate('/home')}>Go back</span>\n                <span onClick={toggle}>Close</span>\n\n            </section>\n        )\n    }\n}","// React,React hooks imports\nimport { useState } from \"react\"\nimport { useNavigate } from \"react-router-dom\";\n// Components\nimport { RecepiesSearch } from \"./ProductSerach\";\nimport { RecepiesList } from \"./RecepiesList\";\nimport { DotsMenu } from \"./DotsMenu\";\n// Style imports\nimport styles from \"./Styles/RecepiesContainer.module.css\";\n// Assests\nimport nothingFound from \"../../Assets/Icons/nothing.png\";\n// Redux,ReduxThunks,Actions\n// Cuastom hooks\nimport { useProductFilter } from \"../../Helpers/CustomHooks\";\n\n\n/**\n * Container component for premix recipe application. \n * Contains two sections: alcoholic and non-alcoholic premixes\n * \n * @returns React.Ellement\n */\nconst RecepiesAppContainer: React.FC = () => {\n    // State defining a recepies section\n    // 0 Non alcoholic 1 alc premixes\n    const [section, setSection] = useState(0);\n    // Array of section labels\n    let sections: string[] = ['Non-alcoholic', 'alcoholic'];\n    // On change handler\n    function onChange(event: React.SyntheticEvent, newValue: number) {\n        setSection(newValue);\n    }\n    // Get products \n    const [products, filterProducts] = useProductFilter('');\n    // Grt navigate\n    const navigate = useNavigate();\n    if(products.length > 0)\n    {\n        return (\n            <section className={styles.recepiesContainer}>\n                <div className={styles.recepiesContainerHeader}>\n                    <h1 className={styles.recepiesContainer__tittle}>Premixes : </h1>\n                    <DotsMenu />\n                </div>\n                <RecepiesSearch filterProducts={filterProducts} />\n                <RecepiesList navigate={navigate} recepies={products} />\n    \n            </section>\n        )\n    }\n    else \n    {\n        return (\n            <section className={styles.recepiesContainerEmpty}>\n                  <DotsMenu />\n            <img className={styles.nothinFoundIcon} src={nothingFound} alt=\"\" />\n            <h1>Nothing Found</h1>\n            </section>\n        )\n    }\n  \n}\n\nexport default RecepiesAppContainer;"],"names":["RecepiesSearch","props","_jsx","_Fragment","children","onChange","event","filterProducts","currentTarget","value","type","placeholder","RecepiesList","goToProductCard","navigate","dataset","id","className","styles","recepies","map","el","onClick","name","DotsMenu","useNavigate","isOpen","setIsOpen","useState","toggle","_jsxs","RecepiesAppContainer","section","setSection","products","useProductFilter","length","src","nothingFound","alt"],"sourceRoot":""}