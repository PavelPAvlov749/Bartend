{"version":3,"file":"static/js/789.511e12e5.chunk.js","mappings":"gSAYA,MAuEA,EAvEkBA,KACd,MAAMC,GAAgBC,EAAAA,EAAAA,OACfC,EAAcC,IAAmBC,EAAAA,EAAAA,WAAS,GACjD,IAAIC,GAAQC,EAAAA,EAAAA,KAAaC,GAA6BA,EAAMC,IAAIC,eAEhE,MAAMC,EAAwBA,KAEtBP,GADAD,EAIJ,EAQJ,SAASS,IACLX,GAASY,EAAAA,EAAAA,MACb,CACA,OACIC,EAAAA,EAAAA,KAAA,WAASC,UAAU,2CAA0CC,UAEzDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKI,IAAKC,EAAMC,IAAI,GAAGL,UAAU,UACjCD,EAAAA,EAAAA,KAACO,EAAAA,GAAM,CAACC,cAAe,CACnBC,MAAO,GACPC,SAAU,IAEVC,oBAAoB,EACpBC,gBAAgB,EAChBC,SAlBAC,IAEZ3B,GAAS4B,EAAAA,EAAAA,IAAwBD,EAAOL,MAAOK,EAAOJ,UAAU,EAiBpDM,iBAAkBC,EAAAA,GAAqBf,SACtCgB,IAA0F,IAAzF,OAAEJ,EAAM,OAAEK,EAAM,QAAEC,EAAO,aAAEC,EAAY,WAAEC,EAAU,QAAEC,EAAO,aAAEC,EAAY,MAAEC,GAAOP,EACjF,OACIf,EAAAA,EAAAA,MAAA,WAASF,UAAU,0BAAyBC,SAAA,EACxCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qBAAoBC,SAAC,WAEnCF,EAAAA,EAAAA,KAAA,SAAO0B,GAAG,QAAQC,aAAa,MAAMC,KAAK,OAAOC,KAAK,QAAQC,SAAUT,EAAcU,YAAa,QAASC,OAAQV,EAAYW,MAAOnB,EAAOL,SAE9IT,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,QAAMC,UAAU,YAAWC,SAAEkB,EAAQX,MAAQU,EAAOV,MAAQ,QAC5DT,EAAAA,EAAAA,KAAA,UACAG,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,SAAO2B,aAAa,MAAMD,GAAG,gBAAgBE,KAAMvC,EAAe,WAAa,OAAQwC,KAAK,WAAWC,SAAUT,EAAcU,YAAa,WAAYC,OAAQV,EAAYW,MAAOnB,EAAOJ,YAC1LV,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAOiC,QAASrC,EAAsBK,UAACF,EAAAA,EAAAA,KAAA,OAAK0B,GAAG,eAAetB,IAAKf,EAAe8C,EAAWC,EAAU9B,IAAI,WAE9HN,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,QAAMC,UAAU,YAAWC,SAAEkB,EAAQV,SAAWS,EAAOT,SAAW,QAClEV,EAAAA,EAAAA,KAAA,UAAQ0B,GAAG,cAAcE,KAAK,SAE1BM,QAASV,EAAca,UAAU,EAAMnC,SAAC,WAC5CF,EAAAA,EAAAA,KAAA,UAEAA,EAAAA,EAAAA,KAAA,UAAQkC,QAASpC,EAAaG,UAAU,cAAaC,SAAC,yBAEtDF,EAAAA,EAAAA,KAAA,WAEM,KAItBA,EAAAA,EAAAA,KAAA,MAAAE,SAAI,QACYF,EAAAA,EAAAA,KAACsC,EAAAA,GAAO,CAACC,GAAG,gBAAerC,UAACF,EAAAA,EAAAA,KAAA,QAAMC,UAAW,sBAAsBC,SAAC,eACnEV,IAASQ,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcC,SAAEV,QAExD,C","sources":["Modules/Auth/LoginPage.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport logo from \"../../Assets/Icons/bartendLogo.png\"\nimport { Formik } from \"formik\";\nimport \"../../Assets/Styles/Login.css\"\nimport { NavLink } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loginByEmailAndPassword, signInWithGooglePopUp } from \"../../Redux/AppReducer\";\nimport showPass from \"../../Assets/Icons/icons8-eye-96.png\"\nimport hidePass from \"../../Assets/Icons/icons8-hide-password-100.png\"\nimport { loginValidationShema } from \"../../Helpers/Helpers\";\nimport { Global_state_type } from \"../../Redux/Store\";\n\nconst LoginPage = () => {\n    const dispatch: any = useDispatch()\n    const [hidePassword, setHidePassword] = useState(true);\n    let error = useSelector((state: Global_state_type) => state.App.errorMessage);\n\n    const onShowPasswordHandler = () => {\n        if (hidePassword) {\n            setHidePassword(false)\n        } else {\n            setHidePassword(true)\n        }\n    }\n\n    //Login by email & password\n    const Submit = (values: { email: string, password: string }) => {\n\n        dispatch(loginByEmailAndPassword(values.email, values.password))\n    }\n    function GogleSignIn() {\n        dispatch(signInWithGooglePopUp());\n    }\n    return (\n        <section className=\"login_page_container translate_animation\">\n\n            <div className=\"login_form\">\n                <img src={logo} alt=\"\" className=\"logo\" />\n                <Formik initialValues={{\n                    email: \"\",\n                    password: \"\"\n                }}\n                    enableReinitialize={true}\n                    validateOnBlur={true}\n                    onSubmit={Submit}\n                    validationSchema={loginValidationShema}>\n                    {({ values, errors, touched, handleChange, handleBlur, isValid, handleSubmit, dirty }) => {\n                        return (\n                            <section className=\"LoginByEmailAndPassword\">\n                                <h1 className=\"login-form__tittle\">Login</h1>\n\n                                <input id=\"email\" autoComplete=\"off\" type=\"text\" name=\"email\" onChange={handleChange} placeholder={\"Email\"} onBlur={handleBlur} value={values.email} />\n\n                                <br />\n                                <span className=\"spanError\">{touched.email ? errors.email : null}</span>\n                                <br />\n                                <div className=\"input_container\">\n                                    <input autoComplete=\"off\" id=\"passwordInput\" type={hidePassword ? \"password\" : \"text\"} name=\"password\" onChange={handleChange} placeholder={\"Password\"} onBlur={handleBlur} value={values.password} />\n                                    <div className=\"show\" onClick={onShowPasswordHandler}><img id=\"passwordShow\" src={hidePassword ? showPass : hidePass} alt=\"\" /></div>\n                                </div>\n                                <br />\n                                <span className=\"spanError\">{touched.password ? errors.password : null}</span>\n                                <button id=\"loginButton\" type=\"submit\"\n                                    //@ts-ignore\n                                    onClick={handleSubmit} disabled={false}>Login</button>\n                                <br />\n                                {/* GOGGLE AUTH  */}\n                                <button onClick={GogleSignIn} className=\"google-auth\">Sign in with Google</button>\n\n                                <br />\n                            \n                            </section>\n                        )\n                    }}\n                </Formik>\n                <h3>OR</h3>\n                                <NavLink to=\"/registration\"><span className={\"create-account-link\"}>Register</span></NavLink>\n                                {error && <span className=\"errorMessage\">{error}</span>}\n            </div>\n        </section>\n    )\n}   \n\nexport default LoginPage;"],"names":["LoginPage","dispatch","useDispatch","hidePassword","setHidePassword","useState","error","useSelector","state","App","errorMessage","onShowPasswordHandler","GogleSignIn","signInWithGooglePopUp","_jsx","className","children","_jsxs","src","logo","alt","Formik","initialValues","email","password","enableReinitialize","validateOnBlur","onSubmit","values","loginByEmailAndPassword","validationSchema","loginValidationShema","_ref","errors","touched","handleChange","handleBlur","isValid","handleSubmit","dirty","id","autoComplete","type","name","onChange","placeholder","onBlur","value","onClick","showPass","hidePass","disabled","NavLink","to"],"sourceRoot":""}