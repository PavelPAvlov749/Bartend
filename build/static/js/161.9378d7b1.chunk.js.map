{"version":3,"file":"static/js/161.9378d7b1.chunk.js","mappings":"gKAOO,MAAMA,EAAoBC,IAC7B,IAAIC,EAA8B,GAsBlC,OArBA,SAA4BC,GACxB,GAAIA,EAAMC,QAAU,EAChB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAMC,OAAQC,IAE9BH,EAASI,MAAKC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,sBAAqBC,SAAEN,EAAME,MAInE,GAAIF,EAAMC,OAAS,EACf,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IAEnBH,EAASI,MAAKC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,sBAAqBC,SAAEN,EAAME,MAI/C,GAAhBF,EAAMC,QACNF,EAASI,MAAKC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,yBAAwBC,SAAC,uBAG/D,CACAC,CAAmBT,EAAME,QAErBI,EAAAA,EAAAA,KAAA,MAAmBC,UAAU,yBAAwBC,UACjDE,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CAAgBC,GAAE,mBAAAC,OAAqBb,EAAMc,IAAKN,SAAA,EACtDF,EAAAA,EAAAA,KAAA,MAAAE,SAAKR,EAAMe,OACVd,EAASe,KAAKC,IAEPP,EAAAA,EAAAA,MAAAQ,EAAAA,SAAA,CAAAV,SAAA,CACKS,GACDX,EAAAA,EAAAA,KAAA,gBANFN,EAAMc,KADfd,EAAMc,GAaV,ECrCAK,EAAYnB,IACrB,MAAMoB,GAAWC,EAAAA,EAAAA,MAMjB,OACIX,EAAAA,EAAAA,MAAA,OAAKH,UAAU,8BAA6BC,SAAA,EACxCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gBAAeC,SAC5BR,EAAMsB,WAAWN,KAAKC,IAEfX,EAAAA,EAAAA,KAACP,EAAgB,CAACgB,KAAME,EAAGF,KAAMb,MAAOe,EAAGf,MAAOY,GAAIG,EAAGH,UAKjER,EAAAA,EAAAA,KAAA,UAAQC,UAAU,iBAClBgB,QAfe,WAEnBH,EAAS,kBACb,EAYgCZ,SAAC,uDACtB,E,kCCjBf,MAyBA,EAzBmBgB,KAEf,IAAIC,GAAaC,EAAAA,EAAAA,KAEjB,OACIpB,EAAAA,EAAAA,KAAA,WAASC,UAAU,yDAAwDC,UACvEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBC,SAC/BiB,EAAWtB,OAAS,GACjBG,EAAAA,EAAAA,KAACa,EAAQ,CAACG,WAAYG,KAEtBf,EAAAA,EAAAA,MAAA,WAASH,UAAU,oDAAmDC,SAAA,EACjEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAAUoB,IAAKC,EAAUC,IAAI,MAC7CvB,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iCAIJF,EAAAA,EAAAA,KAACK,EAAAA,GAAO,CAACC,GAAI,kBAAkBL,UAAW,0BAA0BC,SAAC,iBAK3E,C","sources":["Modules/ChecklistApp/CheckListPreview.tsx","Modules/ChecklistApp/Components/ChekListItem.tsx","Modules/ChecklistApp/Components/CheckLists.tsx"],"sourcesContent":["import { ReactJSXElement } from \"@emotion/react/types/jsx-namespace\";\nimport { NavLink } from \"react-router-dom\";\n\n\n\n\n\nexport const CheckListPreview = (props: { name: string, tasks: string[], id: string }) => {\n    let jsxTasks: ReactJSXElement[] = [];\n    function renderTasksPreview(tasks: string[]) {\n        if (tasks.length <= 4) {\n            for (let i = 0; i < tasks.length; i++) {\n\n                jsxTasks.push(<span className=\"preview__item__task\">{tasks[i]}</span>);\n\n            }\n        }\n        if (tasks.length > 4) {\n            for (let i = 0; i < 4; i++) {\n\n                jsxTasks.push(<span className=\"preview__item__task\">{tasks[i]}</span>);\n\n            }\n        }\n        if (tasks.length == 0) {\n            jsxTasks.push(<span className=\"preview__item--no-task\">No tasks added ...</span>)\n        }\n\n    }\n    renderTasksPreview(props.tasks);\n    return (\n        <li key={props.id} className=\"cheklist-preview__item\">\n            <NavLink key={props.id} to={`/check-lists/id=${props.id}`}>\n                <h3>{props.name}</h3>\n                {jsxTasks.map((el: ReactJSXElement) => {\n                    return (\n                        <>\n                            {el}\n                            <br />\n                        </>\n                    )\n                })}\n            </NavLink>\n\n        </li>\n    )\n}","// React,hooks\nimport { NavLink, useNavigate } from \"react-router-dom\"\n// Types\nimport { checkListType } from \"../../../Redux/CheckListReducer\"\nimport { CheckListPreview } from \"../CheckListPreview\";\n\n\nexport const ItemList = (props: { checkLists: checkListType[] }) => {\n    const navigate = useNavigate();\n\n    const onClickHandler = function () {\n        // navigate by click\n        navigate(\"/new-check-list\");\n    }\n    return (\n        <div className=\"single_check_list container\">\n            <ul className=\"checklis-list\">\n            {props.checkLists.map((el: checkListType) => {\n                return (\n                    <CheckListPreview name={el.name} tasks={el.tasks} id={el.id}/>\n                )\n            })}\n            </ul>\n            {/* If there is no existing cheklists propose to create */}\n            <button className=\"confirm_button\" \n            onClick={onClickHandler}>Добавить</button>\n        </div >\n    )\n}","// React,Components,ReactHooks\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport { ItemList } from \"./ChekListItem\"\n// CustomHooks\nimport { useChecklistList } from \"./Hooks\";\n// Styles and Assets\nimport \"../../../Assets/Styles/CheckLists.css\"\nimport notFound from \"../../../Assets/Icons/nothing.png\";\n\nconst CheckLists = () => {\n\n    let checklists = useChecklistList();\n\n    return (\n        <section className=\"check_lists_container container page_apperas_animation\">\n            <div className=\"ckeck-lists-content\">\n                {checklists.length > 0 ?\n                    <ItemList checkLists={checklists} />\n                    :\n                    <section className=\"check_lists_container__empty-check-list-container\">\n                         <img className=\"bigIcon\" src={notFound} alt=\"\" />\n                        <h3>\n                           \n                            There is no cheklists found\n                        </h3>\n                        <NavLink to={\"/new-check-list\"}className={\"check_lists__create-btn\"}>Create</NavLink>\n                    </section>\n                }\n            </div>\n\n        </section>\n    )\n}\n\nexport default CheckLists"],"names":["CheckListPreview","props","jsxTasks","tasks","length","i","push","_jsx","className","children","renderTasksPreview","_jsxs","NavLink","to","concat","id","name","map","el","_Fragment","ItemList","navigate","useNavigate","checkLists","onClick","CheckLists","checklists","useChecklistList","src","notFound","alt"],"sourceRoot":""}